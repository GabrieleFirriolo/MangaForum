// <auto-generated />
using System;
using API_Manga.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API_Manga.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220502172551_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.16");

            modelBuilder.Entity("API_Manga.Models.ForumPost", b =>
                {
                    b.Property<int>("id_Post")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Creatorid_User")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Topicid_Topic")
                        .HasColumnType("INTEGER");

                    b.HasKey("id_Post");

                    b.HasIndex("Creatorid_User");

                    b.HasIndex("Topicid_Topic");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("API_Manga.Models.ForumReply", b =>
                {
                    b.Property<int>("id_Reply")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Creatorid_User")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Postid_Post")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Reply")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReplyDate")
                        .HasColumnType("TEXT");

                    b.HasKey("id_Reply");

                    b.HasIndex("Creatorid_User");

                    b.HasIndex("Postid_Post");

                    b.ToTable("Replies");
                });

            modelBuilder.Entity("API_Manga.Models.ForumTopic", b =>
                {
                    b.Property<int>("id_Topic")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Mangaid_Manga")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id_Topic");

                    b.HasIndex("Mangaid_Manga");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("API_Manga.Models.ForumUser", b =>
                {
                    b.Property<int>("id_User")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataDiNascita")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazione")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id_User");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("API_Manga.Models.Manga", b =>
                {
                    b.Property<int>("id_Manga")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Synopsis")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id_Manga");

                    b.ToTable("Mangas");
                });

            modelBuilder.Entity("API_Manga.Models.ForumPost", b =>
                {
                    b.HasOne("API_Manga.Models.ForumUser", "Creator")
                        .WithMany()
                        .HasForeignKey("Creatorid_User");

                    b.HasOne("API_Manga.Models.ForumTopic", "Topic")
                        .WithMany()
                        .HasForeignKey("Topicid_Topic");

                    b.Navigation("Creator");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("API_Manga.Models.ForumReply", b =>
                {
                    b.HasOne("API_Manga.Models.ForumUser", "Creator")
                        .WithMany()
                        .HasForeignKey("Creatorid_User");

                    b.HasOne("API_Manga.Models.ForumPost", "Post")
                        .WithMany("Replies")
                        .HasForeignKey("Postid_Post")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("API_Manga.Models.ForumTopic", b =>
                {
                    b.HasOne("API_Manga.Models.Manga", "Manga")
                        .WithMany()
                        .HasForeignKey("Mangaid_Manga");

                    b.Navigation("Manga");
                });

            modelBuilder.Entity("API_Manga.Models.ForumPost", b =>
                {
                    b.Navigation("Replies");
                });
#pragma warning restore 612, 618
        }
    }
}
